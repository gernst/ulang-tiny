
// order infariance
show (a ==> b ==> c) ==> b ==> a ==> c;
proof term lambda x -> lambda y -> lambda z -> x z y;

// chaining
show (b ==> c) ==> (a ==> b) ==> a ==> c;
proof term lambda f -> lambda g -> lambda x -> f (g x);

// modus ponens
show a ==> (a ==> b) ==> b;
proof term lambda x -> lambda f -> f x;

// or elimination
show a \/ b ==> (a ==> c) ==> (b ==> c) ==> c;
proof lambda (Left x)  -> (lambda p1 -> lambda p2 -> p1 x)
           | (Right x) -> (lambda p1 -> lambda p2 -> p2 x);
