data 0 +1;
notation +1 [postfix 10];

show
  (forall p n. (n: Nat) ==> (p 0) ==> (forall m. (m: Nat) ==> p m ==> p (m +1)) ==> p n) ==>
  (0: Nat) ==>
  (forall m. (m: Nat) ==> (m +1: Nat)) ==>
  (0: NatInf) ==>
  (forall m. (m: NatInf) ==> (m +1: NatInf)) ==>
  (k: Nat) ==> (k: NatInf);
proof term
  lambda i
    z1 s1
    z2 s2
    a ->
    Inst i (lambda k -> k: NatInf)
    (lambda ip ->
    Inst ip k
      lambda ipk ->
      Cut (forall m. m: Nat ==> m: NatInf ==> m +1: NatInf)
          (forall m. lambda h1 h2 -> Inst s2 m lambda h3 -> h3 h2)
      lambda cut ->
        ipk a z2 cut);
