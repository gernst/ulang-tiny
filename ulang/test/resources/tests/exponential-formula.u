// Functions can compute formulas

data
  0 +1;

notation
  +1  [postfix 11];

define
  1 := 0 +1;
  2 := 1 +1;
  3 := 2 +1;

  exp 0 := A;
  exp (x +1) := ((exp x) ==> (exp x));

test
  exp 0 == A;
  exp 1 == (A ==> A);
  exp 2 == ((A ==> A) ==> (A ==> A));
  exp 3 == (((A ==> A) ==> (A ==> A)) ==> ((A ==> A) ==> (A ==> A)));

// TODO
//show exp 3;
//assume exp 2;
//use exp 2;
//qed;
